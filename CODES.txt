Upgrade to a smarter Gmail
Secure, fast & organized email
OPEN

If you're having trouble loading, visit the Gmail help center.
(no subject)
C
Chhavi Verma
to me
3 hours agoDetails
LOGIN PAGE:

Activity.java
package com.example.la_firsthad;
import androidx.appcompat.app.AppCompatActivity;
import android.graphics.Color;
import android.os.Bundle;
import android.view.hgjhView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
Button loginButton;
EditText email;
EditText Pass;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
// if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {
// getWindow().setStatusBarColor(Color.TRANSPARENT);
// }

email = findViewById(R.id.emailAddr);
Pass = findViewById(R.id.enteredPass);
loginButton = findViewById(R.id.loginBtn);
loginButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
String message = email.getText().toString();
String message2 = Pass.getText().toString();
String FinalMessage = &quot;Username: &quot;+message+&quot;Password: &quot;+message2;
Toast.makeText(MainActivity.this, FinalMessage, Toast.LENGTH_SHORT).show();
}
});
}
}

XML Code:
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
tools:context=&quot;.MainActivity&quot;&gt;
&lt;LinearLayout
android:id=&quot;@+id/linearLayout&quot;
android:layout_width=&quot;154dp&quot;
android:layout_height=&quot;848dp&quot;
android:background=&quot;#3F51B5&quot;
android:orientation=&quot;vertical&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
tools:ignore=&quot;MissingConstraints&quot;
tools:layout_editor_absoluteX=&quot;-6dp&quot; /&gt;
&lt;TextView
android:id=&quot;@+id/checkoutView&quot;
android:layout_width=&quot;141dp&quot;
android:layout_height=&quot;46dp&quot;
android:text=&quot;CHECKOUT&quot;
android:textColor=&quot;@color/white&quot;
android:textSize=&quot;25dp&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;
&lt;EditText
android:id=&quot;@+id/emailAddr&quot;
android:layout_width=&quot;230dp&quot;
android:layout_height=&quot;40dp&quot;
android:text=&quot;Email Address&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.75&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintTop_toTopOf=&quot;parent&quot;
app:layout_constraintVertical_bias=&quot;0.308&quot; /&gt;
&lt;CheckBox
android:id=&quot;@+id/checkBox5&quot;
android:layout_width=&quot;150dp&quot;
android:layout_height=&quot;30dp&quot;
android:layout_marginBottom=&quot;32dp&quot;
android:text=&quot;Checkbox1&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/checkBox4&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.607&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/enteredPass&quot;
app:layout_constraintVertical_bias=&quot;1.0&quot;
app:layout_marginBaseline=&quot;32dp&quot; /&gt;
&lt;CheckBox
android:id=&quot;@+id/checkBox3&quot;
android:layout_width=&quot;150dp&quot;

android:layout_height=&quot;30dp&quot;
android:layout_marginBottom=&quot;24dp&quot;
android:text=&quot;CheckBox2&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/loginBtn&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.607&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_marginBaseline=&quot;25dp&quot; /&gt;
&lt;CheckBox
android:id=&quot;@+id/checkBox4&quot;
android:layout_width=&quot;150dp&quot;
android:layout_height=&quot;30dp&quot;
android:layout_marginBottom=&quot;28dp&quot;
android:text=&quot;CheckBox3&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/checkBox3&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.607&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_marginBaseline=&quot;25dp&quot; /&gt;
&lt;Button
android:id=&quot;@+id/loginBtn&quot;
android:layout_width=&quot;wrap_content&quot;
android:layout_height=&quot;wrap_content&quot;
android:background=&quot;#3F51B5&quot;
android:text=&quot;LOGIN&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.522&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/enteredPass&quot;
app:layout_constraintVertical_bias=&quot;0.677&quot; /&gt;
&lt;EditText
android:id=&quot;@+id/enteredPass&quot;
android:layout_width=&quot;227dp&quot;
android:layout_height=&quot;47dp&quot;
android:ems=&quot;10&quot;
android:hint=&quot;Password&quot;
android:inputType=&quot;textPassword&quot;
android:text=&quot;password&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintHorizontal_bias=&quot;0.742&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/emailAddr&quot;
app:layout_constraintVertical_bias=&quot;0.025&quot; /&gt;
&lt;ImageView
android:id=&quot;@+id/imageView&quot;
android:layout_width=&quot;99dp&quot;
android:layout_height=&quot;91dp&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/emailAddr&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintStart_toEndOf=&quot;@+id/linearLayout&quot;
app:layout_constraintTop_toTopOf=&quot;parent&quot;
app:srcCompat=&quot;@drawable/img&quot; /&gt;
&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;








1.Building The Media Player App

MainActivity.java

package com.example.mymediaplayer;
import androidx.appcompat.app.AppCompatActivity;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
public class MyMediaPlayerActivity extends AppCompatActivity {
Button playButton, forwardButton, pauseButton, stopButton, restartButton, rewindButton;
MediaPlayer mediaPlayer;
int stopTime = 0;
int forwardTime = 5000;
int backwardTime = 5000;
int startTime = 0;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
playButton = findViewById(R.id.play);
forwardButton = findViewById(R.id.forward);
restartButton = findViewById(R.id.restart);
stopButton = findViewById(R.id.stop);
pauseButton = findViewById(R.id.pause);
rewindButton = findViewById(R.id.rewind);
pauseButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Toast.makeText(MyMediaPlayerActivity.this, &quot;Pausing media now&quot;,
Toast.LENGTH_SHORT).show();
mediaPlayer.pause();
}
});
playButton.setOnClickListener(new View.OnClickListener() {
@Override

public void onClick(View view) {
Toast.makeText(MyMediaPlayerActivity.this, &quot;Playing media now&quot;,
Toast.LENGTH_SHORT).show();
mediaPlayer = MediaPlayer.create(MyMediaPlayerActivity.this, R.raw.song);
mediaPlayer.start();
}
});
stopButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
Toast.makeText(MyMediaPlayerActivity.this, &quot;Stopping media now&quot;,
Toast.LENGTH_SHORT).show();
mediaPlayer.stop();
}
});
restartButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
mediaPlayer.seekTo(startTime);
mediaPlayer.start();
}
});
forwardButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
int curPos = mediaPlayer.getCurrentPosition();
if ((curPos + forwardTime) &lt;= (stopTime = mediaPlayer.getDuration())) {
mediaPlayer.seekTo(curPos + forwardTime);
}
}
});
rewindButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
int curPos = mediaPlayer.getCurrentPosition();
if ((curPos - backwardTime) &gt;= startTime) {
mediaPlayer.seekTo(curPos - backwardTime);
}
}
});
}
}

activity_main.xml

&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
android:background=&quot;@color/black&quot;
android:orientation=&quot;vertical&quot;
android:layout_gravity=&quot;center&quot;
android:gravity=&quot;center&quot;
android:layout_margin=&quot;10dp&quot;

tools:context=&quot;.MainActivity&quot;&gt;
&lt;TextView
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;wrap_content&quot;
android:fontFamily=&quot;casual&quot;
android:gravity=&quot;center_horizontal&quot;
android:text=&quot;KILIYE&quot;
android:textColor=&quot;@color/white&quot;
android:textSize=&quot;50sp&quot; /&gt;
&lt;ImageView
android:id=&quot;@+id/imageView&quot;
android:layout_width=&quot;wrap_content&quot;
android:layout_height=&quot;157dp&quot;
android:src=&quot;@drawable/img_1&quot;
tools:srcCompat=&quot;@drawable/img_1&quot; /&gt;
&lt;Button
android:id=&quot;@+id/play&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;50dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;PLAY&quot;
android:textColor=&quot;@color/white&quot;

/&gt;
&lt;Button
android:id=&quot;@+id/rewind&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;10dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;REWIND&quot;
android:textColor=&quot;@color/white&quot;

/&gt;

&lt;Button
android:id=&quot;@+id/pause&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;10dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;PAUSE&quot;
android:textColor=&quot;@color/white&quot; /&gt;
&lt;Button
android:id=&quot;@+id/forward&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;10dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;FORWARD&quot;
android:textColor=&quot;@color/white&quot; /&gt;
&lt;Button
android:id=&quot;@+id/stop&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;10dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;STOP&quot;
android:textColor=&quot;@color/white&quot; /&gt;
&lt;Button
android:id=&quot;@+id/restart&quot;
android:layout_width=&quot;316dp&quot;
android:layout_height=&quot;wrap_content&quot;
android:layout_marginLeft=&quot;30dp&quot;
android:layout_marginTop=&quot;10dp&quot;
android:layout_marginRight=&quot;30dp&quot;
android:backgroundTint=&quot;#D63D0D&quot;
android:text=&quot;RESTART&quot;
android:textColor=&quot;@color/white&quot; /&gt;

&lt;/LinearLayout&gt;

SCREENSHOTS:

ANDROID MANIFEST:

&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
package=&quot;org.nmit.mediaplayer&quot;&gt;
&lt;application
android:allowBackup=&quot;true&quot;
android:icon=&quot;@mipmap/ic_launcher&quot;
android:label=&quot;@string/app_name&quot;
android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;
android:supportsRtl=&quot;true&quot;
android:theme=&quot;@style/Theme.Mediaplayer&quot;&gt;
&lt;activity
android:name=&quot;.MainActivity&quot;
android:exported=&quot;true&quot;&gt;
&lt;intent-filter&gt;
&lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

&lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
&lt;/intent-filter&gt;
&lt;/activity&gt;
&lt;/application&gt;
&lt;/manifest&gt;










INTENT:

package com.example.implicitintent;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
public class MainActivity extends AppCompatActivity {
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
Button openUrlButton = findViewById(R.id.openUrlButton);
Button sendEmailButton = findViewById(R.id.sendEmailButton);
Button openMapsButton = findViewById(R.id.openMapsButton);
Button sendSmsButton = findViewById(R.id.sendSmsButton); // Add this line
openUrlButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
// Open a URL
String url = "https://www.example.com";
Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
startActivity(intent);
}
});
sendEmailButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
// Send an email
Intent intent = new Intent(Intent.ACTION_SENDTO);
intent.setData(Uri.parse("mailto:recipient@example.com"));
intent.putExtra(Intent.EXTRA_SUBJECT, "Subject");
intent.putExtra(Intent.EXTRA_TEXT, "Email body");
startActivity(intent);
}
});
openMapsButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
// Open Maps for a specific location
String location = "geo:0,0?q=latitude,longitude(label)";
Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(location));
startActivity(intent);
}
});
sendSmsButton.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
// Send an SMS
Intent intent = new Intent(Intent.ACTION_SENDTO);
intent.setData(Uri.parse("smsto:7795825875")); // Replace with the recipient's phone number

intent.putExtra("sms_body", "Hello, this is a test SMS."); // Message content
startActivity(intent);
}
});
}
}

XML CODE:
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:padding="16dp"
tools:context=".MainActivity">
<Button
android:id="@+id/openUrlButton"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Open URL" />
<Button
android:id="@+id/sendEmailButton"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_below="@id/openUrlButton"
android:layout_marginTop="16dp"
android:text="Send Email" />
<Button
android:id="@+id/openMapsButton"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_below="@id/sendEmailButton"
android:layout_marginTop="16dp"
android:text="Open Maps" />
<Button
android:id="@+id/sendSmsButton"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_below="@id/openMapsButton"
android:layout_marginTop="16dp"
android:text="Send SMS" /> <!-- Add this button for sending SMS -->
</RelativeLayout>













WEBVIEW FOLOOWED BY IMAGE VIEW:

1.Demonstrate the usage of the following widgets in android and
submit a report on the same,
1. WebView
2. Checkbox
3. AlertDialog

MainActivity.java
package com.example.task_2_chhavi;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Toast;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.app.AlertDialog;
import android.content.DialogInterface;
public class MainActivity extends AppCompatActivity {
private WebView webView;
private CheckBox checkBox;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
// Initialize WebView and Checkbox
webView = findViewById(R.id.webView);
checkBox = findViewById(R.id.checkbox);
// Configure the WebView
webView.setWebViewClient(new WebViewClient());
WebSettings webSettings = webView.getSettings();
webSettings.setJavaScriptEnabled(true);
webView.loadUrl(&quot;https://github.com/Kgotta-Contribute&quot;);
// Set up Checkbox listener
checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {

@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
// Show AlertDialog when the checkbox is checked
if (isChecked) {
showAlertDialog();
}
}
});
}
@Override
protected void onStart() {
super.onStart();
Toast.makeText(this, &quot;ACTIVITY STARTED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onResume() {
super.onResume();
Toast.makeText(this, &quot;ACTIVITY RESUMED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onPause() {
super.onPause();
Toast.makeText(this, &quot;ACTIVITY PAUSED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onStop() {
super.onStop();
Toast.makeText(this, &quot;ACTIVITY STOPPED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onDestroy() {
super.onDestroy();
Toast.makeText(this, &quot;ACTIVITY DESTROYED&quot;, Toast.LENGTH_SHORT).show();
}
private void showAlertDialog() {
AlertDialog.Builder builder = new AlertDialog.Builder(this);
builder.setMessage(&quot;Checkbox is checked!&quot;);
builder.setPositiveButton(&quot;OK&quot;, new DialogInterface.OnClickListener() {
@Override
public void onClick(DialogInterface dialog, int which) {
dialog.dismiss();
}
});
AlertDialog dialog = builder.create();
dialog.show();
}
}

OR

package com.example.task_2_chhavi;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.Toast;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.app.AlertDialog;
import android.content.DialogInterface;
public class MainActivity extends AppCompatActivity {
private WebView webView;
private CheckBox checkBox;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
// Initialize WebView and Checkbox
webView = findViewById(R.id.webView);
checkBox = findViewById(R.id.checkbox);
// Configure the WebView
webView.setWebViewClient(new WebViewClient());
WebSettings webSettings = webView.getSettings();
webSettings.setJavaScriptEnabled(true);
webView.loadUrl(&quot;https://github.com/Kgotta-Contribute&quot;);
// Set up Checkbox listener
checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
@Override
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
// Show AlertDialog when the checkbox is checked
if (isChecked) {
showAlertDialog();
}
}
});
}
@Override
protected void onStart() {
super.onStart();
Toast.makeText(this, &quot;ACTIVITY STARTED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onResume() {
super.onResume();
Toast.makeText(this, &quot;ACTIVITY RESUMED&quot;, Toast.LENGTH_SHORT).show();
}

@Override
protected void onPause() {
super.onPause();
Toast.makeText(this, &quot;ACTIVITY PAUSED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onStop() {
super.onStop();
Toast.makeText(this, &quot;ACTIVITY STOPPED&quot;, Toast.LENGTH_SHORT).show();
}
@Override
protected void onDestroy() {
super.onDestroy();
Toast.makeText(this, &quot;ACTIVITY DESTROYED&quot;, Toast.LENGTH_SHORT).show();
}
private void showAlertDialog() {
AlertDialog.Builder builder = new AlertDialog.Builder(this);
builder.setMessage(&quot;Checkbox is checked!&quot;);
builder.setPositiveButton(&quot;OK&quot;, new DialogInterface.OnClickListener() {
@Override
public void onClick(DialogInterface dialog, int which) {
dialog.dismiss();
}
});
AlertDialog dialog = builder.create();
dialog.show();
}
}

activity_main.xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout
xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
tools:context=&quot;.MainActivity&quot;&gt;
&lt;!-- WebView to display a webpage --&gt;
&lt;WebView
android:id=&quot;@+id/webView&quot;
android:layout_width=&quot;0dp&quot;
android:layout_height=&quot;0dp&quot;
app:layout_constraintTop_toTopOf=&quot;parent&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/checkbox&quot;
app:layout_constraintVertical_bias=&quot;0.7&quot; /&gt;

&lt;!-- Checkbox to toggle a feature --&gt;
&lt;CheckBox
android:id=&quot;@+id/checkbox&quot;
android:layout_width=&quot;wrap_content&quot;
android:layout_height=&quot;wrap_content&quot;
android:text=&quot;Enable Feature&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/webView&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintVertical_bias=&quot;0.3&quot; /&gt;
&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;

OR

&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout
xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
tools:context=&quot;.MainActivity&quot;&gt;
&lt;!-- WebView to display a webpage --&gt;
&lt;WebView
android:id=&quot;@+id/webView&quot;
android:layout_width=&quot;0dp&quot;
android:layout_height=&quot;0dp&quot;
app:layout_constraintTop_toTopOf=&quot;parent&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintBottom_toTopOf=&quot;@+id/checkbox&quot;
app:layout_constraintVertical_bias=&quot;0.7&quot; /&gt;
&lt;!-- Checkbox to toggle a feature --&gt;
&lt;CheckBox
android:id=&quot;@+id/checkbox&quot;
android:layout_width=&quot;wrap_content&quot;
android:layout_height=&quot;wrap_content&quot;
android:text=&quot;Enable Feature&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/webView&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintVertical_bias=&quot;0.3&quot; /&gt;
&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;

Build.gradle(module: app -&gt; changes)
implementation &#39;androidx.appcompat:appcompat:1.4.0&#39;
implementation &#39;com.google.android.material:material:1.6.0&#39;

SCREENSHOTS:

TASK 2 PART 2 -&gt; IMAGE VIEW

Main_Activity.java
package com.example.task_2_chhavi;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
private ImageView imageView;
private Button change;
private int flag = 1;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
imageView = findViewById(R.id.img);
change = findViewById(R.id.click);
change.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
if (flag == 1) {
imageView.setImageResource(R.drawable.img);
flag = 2;
} else {
imageView.setImageResource(R.drawable.img_1);
flag = 1;
}
}
});
}
}

activity_main.xml
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;androidx.constraintlayout.widget.ConstraintLayout
xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
tools:context=&quot;.MainActivity&quot;&gt;

&lt;ImageView
android:id=&quot;@+id/img&quot;
android:layout_width=&quot;417dp&quot;
android:layout_height=&quot;434dp&quot;
app:srcCompat=&quot;@drawable/img&quot;
tools:layout_editor_absoluteX=&quot;-3dp&quot;
tools:layout_editor_absoluteY=&quot;0dp&quot;
tools:ignore=&quot;MissingConstraints&quot; /&gt;
&lt;Button
android:id=&quot;@+id/click&quot;
android:layout_width=&quot;201dp&quot;
android:layout_height=&quot;54dp&quot;
android:text=&quot;click&quot;
android:textSize=&quot;80px&quot;
app:layout_constraintBottom_toBottomOf=&quot;parent&quot;
app:layout_constraintEnd_toEndOf=&quot;parent&quot;
app:layout_constraintStart_toStartOf=&quot;parent&quot;
app:layout_constraintTop_toBottomOf=&quot;@+id/img&quot;
app:layout_constraintVertical_bias=&quot;0.292&quot;
tools:ignore=&quot;MissingConstraints&quot; /&gt;

&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;

















CROSS AXIS
import 'package:flutter/material.dart';
void main() {
runApp(MaterialApp(
home: Scaffold(
appBar: AppBar(
title: Text("hello"),
),
body: Rowpage(),
),
));
}

class Rowpage extends StatefulWidget {
const Rowpage();
@override
State<Rowpage> createState() => _RowpageState();
}
class _RowpageState extends State<Rowpage> {
@override
Widget build(BuildContext context) {
return Row(
mainAxisAlignment: MainAxisAlignment.spaceBetween,
children: [
Column(
mainAxisAlignment: MainAxisAlignment.start,
children: [
Container(
height: 100,
width: 100,
color: Colors.blue,
child: Center(
child: Text("First Child"),
),
),
],
),
Column(
mainAxisAlignment: MainAxisAlignment.center,
children: [
Container(
height: 100,
width: 100,
color: Colors.green,
child: Center(
child: Text("First Child"),
),
),
],
),
Column(
mainAxisAlignment: MainAxisAlignment.end,
children: [
Container(
height: 100,
width: 100,
color: Colors.red,

c
hild: C
e
n
t
e
r
(
c
hild: Te
x
t
(
"
Fir
s
t
C
hild
"
), ), ), ], ), ], ); }
}















QUIZ APP :

import 'package:flutter/material.dart';
void main() {
runApp(MaterialApp(
home: Scaffold(
appBar: AppBar(title: Text('QUIZ'), centerTitle: true,),
body: QuizPage(),
),
));
}
class QuizPage extends StatefulWidget {
const QuizPage();
@override
State<QuizPage> createState() => _QuizPageState();
}
class Question{
final String qText ;
final bool qAns;
Question({required this.qText, required this.qAns});
}
class Questions{
List<Question> questionBank = [
Question(qText: "Question1", qAns: true),
Question(qText: "Question2", qAns: false),
Question(qText: "Question3", qAns: true),
];
}
class _QuizPageState extends State<QuizPage> {
int questionNumber = 0; // stores the questionNumber, default = first
int currentScore = 0; // final score initialized to 0
Questions questions = Questions(); // Create an object of the Question Class
void updateQuestionNumber() {
setState(() {
questionNumber = questionNumber + 1; // Increments the Question Number
print('$questionNumber');
});
}
bool checkquestionNumber(int questionNumber) {
return questionNumber < questions.questionBank.length ? true : false;
}
void udpateCurrentScore(bool choice, int question_number) {
// based on the choice (T/F button) score will be updated
if (questions.questionBank.length == question_number) {
print("End of questions");
} else {
// checks the current user input against the list answer, if true increments the count
if (questions.questionBank[question_number].qAns == choice) {
setState(() {
currentScore++;
});

}
}
}
@override
Widget build(BuildContext context) {
return Container(
child: Column(
crossAxisAlignment: CrossAxisAlignment.stretch,
children: [
Padding(
padding: const EdgeInsets.only(top: 10.0),
child: Center(
child: Text(
checkquestionNumber(questionNumber)?
questions.questionBank[questionNumber].
qText.toString():"END",
style: TextStyle(
fontSize: 25.0,
),),
),
),
SizedBox(height: 60.0,),
if(checkquestionNumber(questionNumber))
ElevatedButton(
child: Text('True'),
onPressed: (){
setState(() {
if(questionNumber == questions.questionBank.length){
print('End of Questions');
}else{
udpateCurrentScore(true,questionNumber) ;
updateQuestionNumber();
}
});
},
),
SizedBox(height: 20.0,),
if(checkquestionNumber(questionNumber))
ElevatedButton(
child: Text('False'),
onPressed: (){
setState(() {
if(questionNumber == questions.questionBank.length){
print('End of Questions');
}else{
udpateCurrentScore(false,questionNumber) ;
updateQuestionNumber();
}
});
},
),
SizedBox(height: 100.0,),
Padding(
padding: EdgeInsets.all(30.0),
child: Center(
child: Text(
'Your current Score',
style: TextStyle(fontSize: 30.0),
),
),
),
Padding(
padding: EdgeInsets.all(30.0),
child: Center(
child: Text(
'$currentScore',

style: TextStyle(fontSize: 30.0),
),
),
),
],
),
);
}
}














DICE APP :

import 'dart:math';
import 'package:flutter/material.dart';
void main() {
runApp(MaterialApp(
home:Scaffold(
appBar: AppBar(
title: Text("Hello"
),
),
body: Diecepage(),
)
));
}
class Diecepage extends StatefulWidget {
const Diecepage({super.key});
@override
State<Diecepage> createState() => _DiecepageState();
}
class _DiecepageState extends State<Diecepage> {
int left=1;
int right=2;
void change(){
setState(() {
left=Random().nextInt(6)+1;
right=Random().nextInt(6)+1;
});
}
@override
Widget build(BuildContext context) {
return Center(
child: Container(
child: Row(
children: [
Expanded(
flex: 1,
child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.blue
),
child: Image.asset('images/dice$left.png'),
onPressed: (){
change();
},
),
),
Expanded(
flex: 1,
child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.blue
),
child: Image.asset('images/dice$right.png'),
onPressed: (){
change();

},
),
),
],
),
),
);
}
}
SCREENSHOTS:

pubspec.yaml :
name: flutter1
description: A new Flutter project.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev
version: 1.0.0+1
environment:
sdk: '>=2.18.6 <3.0.0'
dependencies:
flutter:
sdk: flutter
cupertino_icons: ^1.0.2
dev_dependencies:
flutter_test:
sdk: flutter
flutter_lints: ^2.0.0
flutter:
uses-material-design: true
# To add assets to your application, add an assets section, like this:
assets:
- images/dice1.png
- images/dice2.png

- images/dice3.png
- images/dice4.png
- images/dice5.png
- images/dice6.png












import 'dart:math';
import 'package:flutter/material.dart';
void main() {
runApp(MaterialApp(
home:Scaffold(
appBar: AppBar(
title: Text("Hello"
),
),
body: Diecepage(),
)
));
}
class Diecepage extends StatefulWidget {
const Diecepage();
@override
State<Diecepage> createState() => _DiecepageState();
}
class _DiecepageState extends State<Diecepage> {
int left=1;
int right=2;
void change(){
setState(() {
left=Random().nextInt(6)+1;
right=Random().nextInt(6)+1;
});
}
@override
Widget build(BuildContext context) {
return Center(
child: Container(
child: Row(
children: [
Expanded(
flex: 1,
child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.blue
),
child: Image.asset('images/dice$left.png'),
onPressed: (){
change();
},
),
),
Expanded(
flex: 1,
child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.blue
),
child: Image.asset('images/dice$right.png'),
onPressed: (){
change();
},
),
),
],
),
),
);
}
}
name: dice115
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using flutter pub publish. This is preferred for private packages.

publish_to: 'none' # Remove this line if you wish to publish to pub.dev
# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
#
https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1
environment:
sdk: ">=2.12.0 <3.0.0"
# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running flutter pub upgrade --major-versions. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run flutter pub outdated.
dependencies:
flutter:
sdk: flutter
# The following adds the Cupertino Icons font to your application.
# Use with the CupertinoIcons class for iOS style icons.
cupertino_icons: ^1.0.2
dev_dependencies:
flutter_test:
sdk: flutter
# The "flutter_lints" package below contains a set of recommended lints to
# encourage good coding practices. The lint set provided by the package is
# activated in the analysis_options.yaml file located at the root of your
# package. See that file for information about deactivating specific lint
# rules and activating additional ones.
flutter_lints: ^1.0.0
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
# The following line ensures that the Material Icons font is
# included with your application, so that you can use the icons in
# the material Icons class.
uses-material-design: true
assets:
- images/
# To add assets to your application, add an assets section, like this:
# assets:
# - images/a_dot_burr.jpeg
# - images/a_dot_ham.jpeg
# An image asset can refer to one or more resolution-specific "variants", see
# https://flutter.dev/assets-and-images/#resolution-aware.
# For details regarding adding assets from package dependencies, see
# https://flutter.dev/assets-and-images/#from-packages
# To add custom fonts to your application, add a fonts section here,
# in this "flutter" section. Each entry in this list should have a
# "family" key with the font family name, and a "fonts" key with a
# list giving the asset and other descriptors for the font. For
# example:
# fonts:
# - family: Schyler
# fonts:

# - asset: fonts/Schyler-Regular.ttf
# - asset: fonts/Schyler-Italic.ttf
# style: italic
# - family: Trajan Pro
# fonts:
# - asset: fonts/TrajanPro.ttf
# - asset: fonts/TrajanPro_Bold.ttf
# weight: 700
#
# For details regarding fonts from package dependencies,
# see https://flutter.dev/custom-fonts/#from-packages
















XYLOPHONE:

Setp 1 : Download the assets from xylophone using below link
https://github.com/londonappbrewery/xylophone-flutter
Step 2 : Go to pubspec.yaml
Put this below the cupertino_icons: ^1.0.2
assets_audio_player: ^3.1.1
Sep 3 : Go to pubspec.yaml
Put this below the uses-material-design: true
assets:
- assets/
Step 4 : Click on pub get in pubspec.yaml
Step 5 : Click on get dependencies in main.Dart
Optional
Step 6 : goto android, click on app,click on build.gradles
Type multiDexEnabled true inside defaultConfig {

Code :

import &#39;package:assets_audio_player/assets_audio_player.dart&#39;;
import &#39;package:flutter/material.dart&#39;;
void main() {
runApp(MaterialApp(
home: Scaffold(
appBar: AppBar(
title: Text(&#39;XYLOPHONE&#39;),
centerTitle: true,
),
body: XyloPage(),
),

));
}
class XyloPage extends StatefulWidget {
const XyloPage({super.key});
@override
State&lt;XyloPage&gt; createState() =&gt; _XyloPageState();
}
class _XyloPageState extends State&lt;XyloPage&gt; {
void playSound(int noteNumber){
AssetsAudioPlayer.newPlayer().open(
Audio(&#39;assets/note$noteNumber.wav&#39;),
autoStart: true,
showNotification: true,
);
}
@override
Widget build(BuildContext context) {
return Column(
crossAxisAlignment: CrossAxisAlignment.stretch,
children: [
Expanded(child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.amberAccent
),
onPressed: (){
playSound(1);
},
child: Text(&#39;first&#39;),
),
),
Expanded(child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.brown
),
onPressed: (){
playSound(2);
},
child: Text(&#39;second&#39;),
),
),
Expanded(child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.yellow
),
onPressed: (){
playSound(3);
},
child: Text(&#39;third&#39;),
),
),
Expanded(child: TextButton(
style: TextButton.styleFrom(
backgroundColor: Colors.green
),

onPressed: (){
playSound(4);
},
child: Text(&#39;four&#39;),
),
),
],
);
}
}


















Without Safe Area
void main() {
runApp(MaterialApp(
home: Text(&quot;This is a Test&quot;,
style: TextStyle(
fontSize: 40,
fontWeight: FontWeight.bold
),
),
),
);
}
With Safe Area
void main() {
runApp(MaterialApp(
home: SafeArea(
child: Text(&quot;This is a Test&quot;,
style: TextStyle(
fontSize: 40,
fontWeight: FontWeight.bold
),
),
),
),
);
}

















SQL LITE DATABASE

DBHelper:
package com.example.sql_lite_db;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import androidx.annotation.Nullable;
public class DBHelper extends SQLiteOpenHelper {
private static final String dbname = "logindb";
private static final String tbName = "login";
private static final int dbversion = 1;
public DBHelper(@Nullable Context context, @Nullable String name, @Nullable SQLiteDatabase.CursorFactory
factory, int version) {
super(context, dbname, null , dbversion);
}
@Override
public void onCreate(SQLiteDatabase sqLiteDatabase) {
sqLiteDatabase.execSQL("CREATE TABLE "+ tbName + "(uname VARCHAR(10), upass VARCHAR(10))");
}
@Override
public void onUpgrade(SQLiteDatabase db, int i, int i1) {
db.execSQL("DROP TABLE IF EXISTS " + tbName);
onCreate(db);
}
public long adduser(String uname, String upass){
SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); //5(a)
ContentValues cv = new ContentValues() ;// 5(b)
cv.put("uname", uname);
cv.put("upass ",upass) ;
long result = sqLiteDatabase.insert(tbName, null,cv); // 5(c)
sqLiteDatabase.close(); // 5(d)
return result ;
}

public void update(String name, String pass){
SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); //6(a)
sqLiteDatabase.execSQL("UPDATE "+tbName+" SET passw='"+pass+"'"+" WHERE
uname='"+name+"';");//6(b)
// UPDATE tbName SET passw='pass' WHERE uname='name' ; SQL statement
sqLiteDatabase.close(); // 6(c)
}

public void delete(String name){
SQLiteDatabase sqLiteDatabase = this.getWritableDatabase(); // 7(a)
sqLiteDatabase.execSQL("DELETE FROM "+tbName+" WHERE uname='" +name+"';" );
// 7(b)
// SQL statement : DELETE FROM tbName WHERE uname='name';
sqLiteDatabase.close(); // 7(c)
}

public String display(Context ctx){
SQLiteDatabase sqLiteDatabase = this.getReadableDatabase(); //8(a)
Cursor cursor = sqLiteDatabase.rawQuery("SELECT * FROM "+tbName, null); //8(b)
String finalres = " " ;
while(cursor.moveToNext()){ //8(c)
finalres += cursor.getString(0)+":"+cursor.getString(1); // 8(d)
}
return finalres;
}

}

MAIN ACTIVITY:
package com.example.sql_lite_db;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
private static final String dbname = "logindb";
private static final String tbName = "login";
private static final int dbversion = 1;
EditText uname, upass;
Button insert, delete, update, display;
TextView finalres;
DBHelper helper;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
uname = findViewById(R.id.name);
upass = findViewById(R.id.pass);
insert = findViewById(R.id.RegBtn);
update = findViewById(R.id.UpdateBtn);
delete = findViewById(R.id.Deletebtn);
display = findViewById(R.id.DisplayBtn);
finalres = findViewById(R.id.textView);
insert.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
helper = new DBHelper(MainActivity.this, dbname, null, dbversion);
long val = helper.adduser(uname.getText().toString(), upass.getText().toString());
if(val == -1)
{
Toast.makeText(MainActivity.this, "ERROR", Toast.LENGTH_SHORT).show();

}
else
{
Toast.makeText(MainActivity.this, "INSERTED", Toast.LENGTH_SHORT).show();
}
}
});
update.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
helper = new DBHelper(MainActivity.this, dbname, null, dbversion);
helper.update(uname.getText().toString(), upass.getText().toString());
}
});
delete.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
helper = new DBHelper(MainActivity.this, dbname, null, dbversion);
helper.delete(uname.getText().toString());
}
});
display.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View view) {
helper = new DBHelper(MainActivity.this, dbname, null, dbversion);
String res = helper.display(MainActivity.this);
finalres.setText(res);
}
});
}
}

ACTIVITY _ MAIN . XML :
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:id="@+id/constraintLayoutMain"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<Button
android:id="@+id/RegBtn"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginTop="40dp"
android:text="Register"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/pass" />
<Button
android:id="@+id/UpdateBtn"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginTop="36dp"
android:text="Update"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/Deletebtn" />

<Button
android:id="@+id/DisplayBtn"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginTop="36dp"
android:text="Display"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/UpdateBtn" />
<Button
android:id="@+id/Deletebtn"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:text="Delete"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/RegBtn"
app:layout_constraintVertical_bias="0.098" />
<EditText
android:id="@+id/name"
android:layout_width="match_parent"
android:layout_height="63dp"
android:ems="10"
android:hint="UserName"
android:inputType="textPersonName"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toTopOf="parent"
app:layout_constraintVertical_bias="0.079"
tools:ignore="DuplicateIds" />
<EditText
android:id="@+id/pass"
android:layout_width="match_parent"
android:layout_height="58dp"
android:ems="10"
android:hint="Password"
android:inputType="textPersonName"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintHorizontal_bias="0.0"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/name"
app:layout_constraintVertical_bias="0.041" />
<EditText
android:id="@+id/textView"
android:layout_width="407dp"
android:layout_height="49dp"
android:ems="10"
android:inputType="textPersonName"
android:text="RESULT"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent"
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/DisplayBtn" />
</androidx.constraintlayout.widget.ConstraintLayout>